// <auto-generated />
using System;
using ASP_Contact.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP_Contact.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241112201338_InitaiCreate")]
    partial class InitaiCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ASP_Contact.Models.ContactEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Created = new DateTime(2024, 11, 12, 21, 13, 38, 461, DateTimeKind.Local).AddTicks(3531),
                            OrganizationId = 101,
                            Priority = 1,
                            dateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "adam@wsei.edu.pl",
                            name = "Adam",
                            phone = "123456789",
                            surname = "Kowal"
                        },
                        new
                        {
                            id = 2,
                            Created = new DateTime(2024, 11, 12, 21, 13, 38, 461, DateTimeKind.Local).AddTicks(3584),
                            OrganizationId = 102,
                            Priority = 2,
                            dateOfBirth = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "adam@wsei.edu.pl",
                            name = "Adam",
                            phone = "123456789",
                            surname = "Kowal"
                        });
                });

            modelBuilder.Entity("ASP_Contact.Models.OrganizationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("REGON")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("organizations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 101,
                            NIP = "283792834",
                            Name = "WSEI",
                            REGON = "2837294234"
                        },
                        new
                        {
                            Id = 102,
                            NIP = "283792834",
                            Name = "PKP",
                            REGON = "2837294234"
                        });
                });

            modelBuilder.Entity("ASP_Contact.Models.ContactEntity", b =>
                {
                    b.HasOne("ASP_Contact.Models.OrganizationEntity", "Organization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ASP_Contact.Models.OrganizationEntity", b =>
                {
                    b.OwnsOne("ASP_Contact.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OrganizationEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("OrganizationEntityId");

                            b1.ToTable("organizations");

                            b1.WithOwner()
                                .HasForeignKey("OrganizationEntityId");

                            b1.HasData(
                                new
                                {
                                    OrganizationEntityId = 101,
                                    City = "Kraków",
                                    Street = "św. Filipa 17"
                                },
                                new
                                {
                                    OrganizationEntityId = 102,
                                    City = "Warszawa",
                                    Street = "Dworcowa 9"
                                });
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ASP_Contact.Models.OrganizationEntity", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
